{"ast":null,"code":"var _jsxFileName = \"/Users/npamnani/omniventory/dashboard/src/components/ProductViewComponent/index.js\";\nimport React from 'react';\nimport { Table, Modal, Header, Form, Select, FormGroup } from \"semantic-ui-react\";\nimport { DateInput } from \"semantic-ui-calendar-react\";\nimport 'semantic-ui-css/semantic.min.css';\n\nclass ProductTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleQuantityPurchaseChange = (e, {\n      name,\n      value\n    }) => {\n      //console.log(\"quantityToPurchase\"+value);\n      this.setState({\n        quantityToPurchase: value\n      });\n    };\n\n    this.handleQuantitySellChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        orderQuantity: value\n      });\n    };\n\n    this.handleSupplierChangeOption = (e, {\n      name,\n      value\n    }) => {\n      // console.log(\"supplierId\"+value);\n      this.setState({\n        supplierToPurchaseFrom: value\n      });\n    };\n\n    this.handlePurchaseDate = (e, {\n      name,\n      value\n    }) => {\n      // console.log(\"dateSelected\"+value);\n      this.setState({\n        purchaseDate: value\n      });\n    };\n\n    this.handleOrderDate = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        orderDate: value\n      });\n    };\n\n    this.placeOrder = () => {\n      const {\n        id,\n        sku,\n        name,\n        orderQuantity,\n        orderDate\n      } = this.state;\n      var data = {\n        id: id,\n        sku: sku,\n        name: name,\n        orderQuantity: orderQuantity,\n        orderDate: orderDate\n      };\n      fetch('/api/v1/placeOrder', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n\n        if (data.msg === \"success\") {}\n      }).catch(function (err) {\n        console.log(err);\n      });\n      this.closeShippingModal();\n      this.fetchProducts();\n    };\n\n    this.makePurchase = () => {\n      const {\n        id,\n        sku,\n        name,\n        quantityToPurchase,\n        supplierToPurchaseFrom,\n        purchaseDate\n      } = this.state;\n      var data = {\n        id: id,\n        sku: sku,\n        name: name,\n        quantityToPurchase: quantityToPurchase,\n        supplierToPurchaseFrom: supplierToPurchaseFrom,\n        purchaseDate: purchaseDate\n      };\n      fetch('/api/v1/makePurchase', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        if (response.status >= 400) {\n          throw new Error(\"Bad response from server\");\n        }\n\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n\n        if (data.msg === \"success\") {}\n      }).catch(function (err) {\n        console.log(err);\n      });\n      this.closeModal();\n      this.fetchProducts();\n    };\n\n    this.state = {\n      products: [],\n      modalIsOpen: false,\n      shippingModalIsOpen: false,\n      id: '',\n      sku: '',\n      name: '',\n      currentStock: '',\n      suppliers: [],\n      supplierOptions: [],\n      quantityToPurchase: '',\n      supplierToPurchaseFrom: '',\n      purchaseDate: '',\n      orderQuantity: '',\n      orderDate: '',\n      updateBoard: 0\n    };\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.makePurchase = this.makePurchase.bind(this);\n    this.placeOrder = this.placeOrder.bind(this);\n  }\n\n  openShippingModal(product) {\n    this.setState({\n      shippingModalIsOpen: true,\n      name: product[2],\n      id: product[0],\n      sku: product[1],\n      currentStock: product[4]\n    });\n  }\n\n  closeShippingModal() {\n    this.setState({\n      shippingModalIsOpen: false,\n      updateBoard: this.state.updateBoard === 1 ? 0 : 1\n    });\n  }\n\n  openModal(product) {\n    this.setState({\n      modalIsOpen: true,\n      name: product[2],\n      id: product[0],\n      sku: product[1],\n      currentStock: product[4]\n    });\n    this.prepareOptions();\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n      updateBoard: this.state.updateBoard === 1 ? 0 : 1\n    });\n  }\n\n  prepareOptions() {\n    for (var i = 0; i < this.state.suppliers.length; i++) {\n      this.state.supplierOptions.push({\n        key: this.state.suppliers[i][0],\n        text: this.state.suppliers[i][1],\n        value: this.state.suppliers[i][0]\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    //this.fetchProducts();\n    if (prevState.updateBoard !== this.state.updateBoard) {\n      this.fetchProducts(); //console.log(\"Hello\");\n    }\n  }\n\n  fetchProducts() {\n    fetch('/api/v1/products').then(res => res.json()).then(data => this.setState({\n      products: data\n    }));\n  }\n\n  componentDidMount() {\n    this.fetchProducts();\n    fetch('/api/v1/suppliers').then(res => res.json()).then(data => this.setState({\n      suppliers: data\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, \"Id\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }, \"Sku\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, \"Brand\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, \"Currentstock\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }, \"Thresholdstock\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }, this.state.products.map(product => /*#__PURE__*/React.createElement(Table.Row, {\n      key: product[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 29\n      }\n    }, product[0]), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    }, product[1]), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 29\n      }\n    }, product[2], /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.openModal(product),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 83\n      }\n    }, \"PURCHASE \"), \"| \", /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.openShippingModal(product),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 139\n      }\n    }, \"SHIP ORDER \"))), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }, product[3]), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 29\n      }\n    }, product[4]), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 29\n      }\n    }, product[5])))), /*#__PURE__*/React.createElement(Modal, {\n      closeIcon: true,\n      open: this.state.modalIsOpen,\n      onClose: () => this.closeModal(),\n      onOpen: () => this.openModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      icon: \"archive\",\n      content: \"Make Purchase\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.makePurchase,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      disabled: true,\n      label: \"Product Id\",\n      name: \"productid\",\n      value: this.state.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      disabled: true,\n      label: \"Product SKU\",\n      name: \"sku\",\n      value: this.state.sku,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      disabled: true,\n      label: \"Product Name\",\n      name: \"name\",\n      value: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      disabled: true,\n      label: \"Product Current Qty\",\n      name: \"currentqty\",\n      value: this.state.currentStock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"0\",\n      name: \"quantityreqd\",\n      label: \"Quantity Required\",\n      value: this.state.quantityToPurchase,\n      onChange: this.handleQuantityPurchaseChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Field, {\n      fluid: true,\n      search: true,\n      control: Select,\n      label: \"Select Supplier\",\n      placeholder: \"Generic Supplier\",\n      name: \"supplier\",\n      value: this.state.supplierToPurchaseFrom,\n      options: this.state.supplierOptions,\n      onChange: this.handleSupplierChangeOption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 30\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      fluid: true,\n      label: \"Purchase Date\",\n      width: 8,\n      control: DateInput,\n      name: \"date\",\n      dateFormat: \"YYYY-MM-DD\",\n      value: this.state.purchaseDate,\n      onChange: this.handlePurchaseDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 28\n      }\n    }, \" Purchase \"))), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Modal, {\n      closeIcon: true,\n      open: this.state.shippingModalIsOpen,\n      onClose: () => this.closeShippingModal(),\n      onOpen: () => this.openShippingModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      icon: \"truck\",\n      content: \"Place an order\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.placeOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      disabled: true,\n      label: \"Product Id\",\n      name: \"productid\",\n      value: this.state.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      disabled: true,\n      label: \"Product SKU\",\n      name: \"sku\",\n      value: this.state.sku,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      disabled: true,\n      label: \"Product Name\",\n      name: \"name\",\n      value: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      disabled: true,\n      label: \"Product Current Qty\",\n      name: \"currentqty\",\n      value: this.state.currentStock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"0\",\n      name: \"orderqty\",\n      label: \"Quantity to sell\",\n      value: this.state.orderQuantity,\n      onChange: this.handleQuantitySellChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      fluid: true,\n      label: \"Order Date\",\n      width: 8,\n      control: DateInput,\n      name: \"date\",\n      dateFormat: \"YYYY-MM-DD\",\n      value: this.state.orderDate,\n      onChange: this.handleOrderDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 29\n      }\n    }, \" Place Order \"))), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default ProductTable;","map":{"version":3,"sources":["/Users/npamnani/omniventory/dashboard/src/components/ProductViewComponent/index.js"],"names":["React","Table","Modal","Header","Form","Select","FormGroup","DateInput","ProductTable","Component","constructor","props","handleQuantityPurchaseChange","e","name","value","setState","quantityToPurchase","handleQuantitySellChange","orderQuantity","handleSupplierChangeOption","supplierToPurchaseFrom","handlePurchaseDate","purchaseDate","handleOrderDate","orderDate","placeOrder","id","sku","state","data","fetch","method","headers","body","JSON","stringify","then","response","status","Error","json","console","log","msg","catch","err","closeShippingModal","fetchProducts","makePurchase","closeModal","products","modalIsOpen","shippingModalIsOpen","currentStock","suppliers","supplierOptions","updateBoard","openModal","bind","openShippingModal","product","prepareOptions","i","length","push","key","text","componentDidUpdate","prevProps","prevState","snapshot","res","componentDidMount","render","map","float"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Table, Modal, Header, Form, Select, FormGroup} from \"semantic-ui-react\";\nimport {DateInput} from \"semantic-ui-calendar-react\";\nimport 'semantic-ui-css/semantic.min.css'\n\nclass ProductTable extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            modalIsOpen: false,\n            shippingModalIsOpen:false,\n            id:'',\n            sku:'',\n            name:'',\n            currentStock:'',\n            suppliers: [],\n            supplierOptions:[],\n            quantityToPurchase:'',\n            supplierToPurchaseFrom:'',\n            purchaseDate:'',\n            orderQuantity:'',\n            orderDate:'',\n            updateBoard:0\n        }\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.makePurchase = this.makePurchase.bind(this);\n        this.placeOrder = this.placeOrder.bind(this);\n    }\n\n    openShippingModal(product) {\n        this.setState ( {\n            shippingModalIsOpen: true,\n            name: product[2],\n            id: product[0],\n            sku: product[1],\n            currentStock: product[4]\n        });\n    }\n\n    closeShippingModal() {\n        this.setState({\n            shippingModalIsOpen: false,\n            updateBoard: (this.state.updateBoard === 1)?0:1\n        });\n\n\n    }\n\n    openModal(product) {\n        this.setState ({\n           modalIsOpen: true,\n           name: product[2],\n           id: product[0],\n           sku: product[1],\n           currentStock: product[4]\n        });\n        this.prepareOptions();\n\n    }\n\n    closeModal() {\n        this.setState({\n            modalIsOpen: false,\n            updateBoard: (this.state.updateBoard === 1)?0:1\n        });\n\n    }\n\n    handleQuantityPurchaseChange=(e, {name, value})=> {\n        //console.log(\"quantityToPurchase\"+value);\n        this.setState({quantityToPurchase: value});\n    }\n\n    handleQuantitySellChange=(e,{name, value})=>{\n        this.setState({orderQuantity: value});\n    }\n\n    handleSupplierChangeOption=(e, {name,value})=> {\n       // console.log(\"supplierId\"+value);\n        this.setState({supplierToPurchaseFrom: value});\n    }\n\n    handlePurchaseDate=(e, {name, value})=>{\n       // console.log(\"dateSelected\"+value);\n        this.setState({purchaseDate: value});\n    }\n\n    handleOrderDate=(e,{name,value})=>{\n        this.setState({orderDate: value});\n    }\n\n    prepareOptions() {\n       for(var i = 0; i < this.state.suppliers.length; i++) {\n           this.state.supplierOptions.push({key:this.state.suppliers[i][0],text:this.state.suppliers[i][1],value:this.state.suppliers[i][0]});\n       }\n\n    }\n\n    placeOrder=()=> {\n        const{id, sku, name, orderQuantity, orderDate} = this.state;\n\n        var data = {\n            id: id,\n            sku: sku,\n            name:name,\n            orderQuantity:orderQuantity,\n            orderDate:orderDate\n        }\n\n        fetch('/api/v1/placeOrder',{\n            method: 'POST',\n            headers : {\n                'Content-Type' : 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(function(response){\n            if(response.status >= 400) {\n                throw new Error(\"Bad response from server\");\n            }\n            return response.json();\n        }).then(function(data) {\n            console.log(data);\n            if(data.msg === \"success\") {\n\n            }\n        }).catch(function(err){\n            console.log(err);\n        }) ;\n\n        this.closeShippingModal();\n        this.fetchProducts();\n\n    }\n\n\n    makePurchase=()=> {\n        const{id, sku, name, quantityToPurchase, supplierToPurchaseFrom, purchaseDate} = this.state;\n\n\n\n        var data = {\n            id: id,\n            sku: sku,\n            name: name,\n            quantityToPurchase: quantityToPurchase,\n            supplierToPurchaseFrom: supplierToPurchaseFrom,\n            purchaseDate: purchaseDate\n        }\n\n        fetch('/api/v1/makePurchase',{\n            method: 'POST',\n            headers: {\n              'Content-Type' : 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(function(response){\n            if(response.status >= 400) {\n                throw new Error(\"Bad response from server\");\n            }\n            return response.json();\n        }).then(function(data) {\n            console.log(data);\n            if(data.msg === \"success\") {\n\n            }\n        }).catch(function(err){\n            console.log(err);\n        }) ;\n\n        this.closeModal();\n        this.fetchProducts();\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //this.fetchProducts();\n        if(prevState.updateBoard !== this.state.updateBoard) {\n\n            this.fetchProducts();\n            //console.log(\"Hello\");\n        }\n    }\n\n    fetchProducts() {\n        fetch('/api/v1/products')\n            .then(res => res.json())\n            .then(data => this.setState({ products: data }));\n    }\n\n    componentDidMount() {\n        this.fetchProducts();\n\n        fetch('/api/v1/suppliers')\n            .then(res => res.json())\n            .then(data => this.setState({suppliers: data}));\n\n\n    }\n\n\n    render() {\n        return (\n            <Table celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Id</Table.HeaderCell>\n                        <Table.HeaderCell>Sku</Table.HeaderCell>\n                        <Table.HeaderCell>Name</Table.HeaderCell>\n                        <Table.HeaderCell>Brand</Table.HeaderCell>\n                        <Table.HeaderCell>Currentstock</Table.HeaderCell>\n                        <Table.HeaderCell>Thresholdstock</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                    {this.state.products.map(product =>\n                        <Table.Row key={product[0]}>\n                            <Table.Cell>{product[0]}</Table.Cell>\n                            <Table.Cell>{product[1]}</Table.Cell>\n                            <Table.Cell>{product[2]}<span style={{float:\"right\"}}><a onClick={()=>this.openModal(product)}>PURCHASE </a>| <a onClick={() => this.openShippingModal(product)} >SHIP ORDER </a></span></Table.Cell>\n                            <Table.Cell>{product[3]}</Table.Cell>\n                            <Table.Cell>{product[4]}</Table.Cell>\n                            <Table.Cell>{product[5]}</Table.Cell>\n                        </Table.Row>\n                    )}\n\n                </Table.Body>\n\n                <Modal\n                    closeIcon\n                    open={this.state.modalIsOpen}\n                    onClose={() => this.closeModal()}\n                    onOpen={() => this.openModal()}\n                >\n                    <Header icon='archive' content='Make Purchase' />\n                    <Modal.Content>\n                        <Form onSubmit={this.makePurchase} >\n                         <Form.Group widths='equal'>\n                          <Form.Input\n                            fluid\n                            disabled\n                            label='Product Id'\n                            name='productid'\n                            value={this.state.id}\n                          />\n\n                            <Form.Input\n                                fluid\n                                disabled\n                                label='Product SKU'\n                                name='sku'\n                                value={this.state.sku}\n                            />\n\n                            <Form.Input\n                                fluid\n                                disabled\n                                label='Product Name'\n                                name='name'\n                                value={this.state.name}\n                            />\n\n                            <Form.Input\n                                fluid\n                                disabled\n                                label='Product Current Qty'\n                                name='currentqty'\n                                value={this.state.currentStock}\n                            />\n\n                           </Form.Group>\n                            <Form.Group widths='equal'>\n                                <Form.Input\n                                  fluid\n                                  placeholder='0'\n                                  name='quantityreqd'\n                                  label='Quantity Required'\n                                  value={this.state.quantityToPurchase}\n                                  onChange={this.handleQuantityPurchaseChange}\n                                />\n\n                             <Form.Field\n                                fluid\n                                search\n                                control = {Select}\n                                label='Select Supplier'\n                                placeholder='Generic Supplier'\n                                name='supplier'\n                                value={this.state.supplierToPurchaseFrom}\n                                options={this.state.supplierOptions}\n                                onChange={this.handleSupplierChangeOption}\n                             />\n\n                            </Form.Group>\n                            <FormGroup>\n                                <Form.Field\n                                  fluid\n                                  label=\"Purchase Date\"\n                                  width = {8}\n                                  control = {DateInput}\n                                  name='date'\n                                  dateFormat=\"YYYY-MM-DD\"\n                                  value={this.state.purchaseDate}\n                                  onChange={this.handlePurchaseDate}\n                                />\n                            </FormGroup>\n                           <Form.Button> Purchase </Form.Button>\n\n                        </Form>\n\n                    </Modal.Content>\n                    <Modal.Actions>\n\n                    </Modal.Actions>\n                </Modal>\n\n\n                <Modal\n                    closeIcon\n                    open={this.state.shippingModalIsOpen}\n                    onClose={() => this.closeShippingModal()}\n                    onOpen={() => this.openShippingModal()}\n                >\n                    <Header icon='truck' content='Place an order' />\n                    <Modal.Content>\n                        <Form onSubmit={this.placeOrder} >\n                            <Form.Group widths='equal'>\n                                <Form.Input\n                                    fluid\n                                    disabled\n                                    label='Product Id'\n                                    name='productid'\n                                    value={this.state.id}\n                                />\n\n                                <Form.Input\n                                    fluid\n                                    disabled\n                                    label='Product SKU'\n                                    name='sku'\n                                    value={this.state.sku}\n                                />\n\n                                <Form.Input\n                                    fluid\n                                    disabled\n                                    label='Product Name'\n                                    name='name'\n                                    value={this.state.name}\n                                />\n\n                                <Form.Input\n                                    fluid\n                                    disabled\n                                    label='Product Current Qty'\n                                    name='currentqty'\n                                    value={this.state.currentStock}\n                                />\n\n                            </Form.Group>\n                            <Form.Group widths='equal'>\n                                <Form.Input\n                                    fluid\n                                    placeholder='0'\n                                    name='orderqty'\n                                    label='Quantity to sell'\n                                    value={this.state.orderQuantity}\n                                    onChange={this.handleQuantitySellChange}\n                                />\n\n                            </Form.Group>\n                            <FormGroup>\n                                <Form.Field\n                                    fluid\n                                    label=\"Order Date\"\n                                    width = {8}\n                                    control = {DateInput}\n                                    name='date'\n                                    dateFormat=\"YYYY-MM-DD\"\n                                    value={this.state.orderDate}\n                                    onChange={this.handleOrderDate}\n                                />\n                            </FormGroup>\n                            <Form.Button> Place Order </Form.Button>\n\n                        </Form>\n\n                    </Modal.Content>\n                    <Modal.Actions>\n\n                    </Modal.Actions>\n                </Modal>\n\n\n\n            </Table>\n\n\n        )\n    }\n}\n\nexport default ProductTable;\n"]},"metadata":{},"sourceType":"module"}